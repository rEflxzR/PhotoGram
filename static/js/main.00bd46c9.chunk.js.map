{"version":3,"sources":["styles/navbarstyles.js","Context/Themecontext.js","Components/Title.js","firebase/config.js","Components/Progressmeter.js","Components/Imageform.js","Components/Imagegallery.js","Components/Dashboard.js","Components/Pagecontent.js","App.js","reportWebVitals.js","index.js"],"names":["styles","theme","root","width","title","display","textAlign","marginTop","marginBottom","breakpoints","up","fontSize","fontWeight","normalMenu","hamburgerMenu","menuItem","justifyContent","switchIcon","marginLeft","marginRight","tabs","ThemeContext","createContext","ThemeProvider","props","state","darkMode","toggleTheme","bind","this","setState","Provider","value","children","Component","Title","anchorElement","handleMenuButtonClick","handleMenuButtonClose","evt","currentTarget","classes","context","className","AppBar","color","position","Toolbar","Typography","FormControlLabel","control","Switch","onChange","label","labelPlacement","Tabs","aria-label","Tab","icon","Button","aria-controls","aria-haspopup","onClick","Menu","id","open","Boolean","onClose","keepMounted","anchorEl","MenuItem","contextType","withStyles","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","imageStorage","storage","firestore","timestamp","FieldValue","serverTimestamp","LinearProgressWithLabel","Box","alignItems","mr","LinearProgress","variant","minWidth","Math","round","Imageform","imageFile","invalidFile","showProgressMeter","uploadPercent","handleImageUpload","selectedImage","files","imageType","type","setTimeout","storageRef","ref","name","imagesURLCollection","collection","put","on","snap","percent","bytesTransferred","totalBytes","err","console","log","a","getDownloadURL","imageURL","add","url","uploadedAt","accept","hidden","htmlFor","size","component","TextField","style","error","helperText","disabled","Imagegallery","imagesData","rowsNum","ceil","length","Array","map","row","index","slice","image","src","alt","Photogallerydashboard","userPhotos","orderBy","onSnapshot","result","forEach","push","data","Pagecontent","backgroundColor","backgroundImage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00bd46c9.chunk.js","sourcesContent":["const styles = (theme) => ({\n    root: {\n        width: \"100%\"\n    },\n    title: {\n        width: \"100%\",\n        display: \"inline\",\n        textAlign: \"center\",\n        marginTop: \"auto\",\n        marginBottom: \"auto\",\n        [theme.breakpoints.up('xs')]: {\n            fontSize: 20,\n            fontWeight: \"bold\"\n        },\n        [theme.breakpoints.up('lg')]: {\n            fontSize: 60,\n            fontWeight: \"bold\"\n        }\n    },\n    normalMenu: {\n        [theme.breakpoints.up('xs')]: {\n            display: \"none\"\n        },\n        [theme.breakpoints.up('lg')]: {\n            display: \"flex\",\n        }\n    },\n    hamburgerMenu: {\n        [theme.breakpoints.up('lg')]: {\n            display: \"none\"\n        }\n    },\n    menuItem: {\n        display: \"flex\",\n        justifyContent: \"center\"\n    },\n    switchIcon: {\n        marginLeft: 0,\n        marginRight: 0,\n        marginTop: \"auto\",\n        marginBottom: \"auto\"\n    },\n    tabs: {\n        display: \"flex\",\n        marginLeft: \"auto\",\n    }\n})\n\nexport default styles","import React, { createContext, Component } from 'react'\n\nexport const ThemeContext = createContext()\n\nexport class ThemeProvider extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            darkMode: false\n        }\n\n        this.toggleTheme = this.toggleTheme.bind(this)\n    }\n\n    toggleTheme() {\n        this.setState({ darkMode: !this.state.darkMode })\n    }\n\n    render() {\n        return <ThemeContext.Provider value={{...this.state, toggleTheme: this.toggleTheme}}>{this.props.children}</ThemeContext.Provider>\n    }\n}","import React, { Component } from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport styles from '../styles/navbarstyles'\nimport { Switch } from '@material-ui/core'\nimport {ThemeContext} from '../Context/Themecontext'\n\nclass Title extends Component {\n    static contextType = ThemeContext\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            anchorElement: null\n        }\n\n        this.handleMenuButtonClick = this.handleMenuButtonClick.bind(this)\n        this.handleMenuButtonClose = this.handleMenuButtonClose.bind(this)\n    }\n\n    handleMenuButtonClick(evt) {\n        this.setState({ anchorElement: evt.currentTarget })\n    }\n\n    handleMenuButtonClose() {\n        this.setState({ anchorElement: null })\n    }\n\n    render() {\n        const {classes} = this.props\n        const {anchorElement} = this.state\n        const { darkMode, toggleTheme } = this.context\n\n        return(\n            <div className=\"title\">\n                <AppBar className={classes.root} color={darkMode ? \"default\" : \"primary\"} position=\"static\">\n                    <Toolbar className=\"toolbar\">\n                        <Typography className={classes.title} color=\"inherit\"><em>JanzWE's PhotoGram</em></Typography>\n                        <div className={classes.normalMenu}>\n                            <FormControlLabel className={classes.switchIcon} value=\"bottom\" control={<Switch onChange={toggleTheme} color=\"secondary\" />} \n                                label=\"Theme\" labelPlacement=\"bottom\"\n                            />\n                            <Tabs className={classes.tabs} value={\"logout\"} aria-label=\"simple tabs example\">\n                                <Tab icon={<PersonPinIcon fontSize=\"large\" />} label=\"logout\" />\n                            </Tabs>\n                        </div>\n\n                        {/* Hamburger Menu Only Upto Medium Width Devices */}\n                        <div className={classes.hamburgerMenu}>\n                            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.handleMenuButtonClick}>\n                                <MenuIcon />\n                            </Button>\n                            <Menu id=\"simple-menu\" open={Boolean(anchorElement)} onClose={this.handleMenuButtonClose} keepMounted anchorEl={anchorElement}>\n                                <MenuItem className={classes.menuItem}>\n                                    <FormControlLabel className={classes.switchIcon} value=\"bottom\" control={<Switch onChange={toggleTheme} color=\"secondary\" />} label=\"Toggle Theme\" labelPlacement=\"bottom\"/>\n                                </MenuItem>\n                                <MenuItem className={classes.menuItem}>\n                                    <Tabs className={classes.tabs} value={\"logout\"} aria-label=\"simple tabs example\">\n                                        <Tab icon={<PersonPinIcon fontSize=\"small\" />} label=\"logout\" />\n                                    </Tabs>\n                                </MenuItem>\n                            </Menu>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n\n                <h2 className={\"text-center my-5 \" + (darkMode ? \"text-light\":\"text-dark\")}>Your PIXIEST Pics Collection</h2>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Title);","import firebase from 'firebase/app'\nimport 'firebase/storage'\nimport 'firebase/firestore'\n\nvar firebaseConfig = {\n\tapiKey: \"AIzaSyCPCyNq-zU2JRUrOmNSe6ARml7YIMWFmUc\",\n\tauthDomain: \"pcgram-photo-gallery.firebaseapp.com\",\n\tprojectId: \"pcgram-photo-gallery\",\n\tstorageBucket: \"pcgram-photo-gallery.appspot.com\",\n\tmessagingSenderId: \"636216836291\",\n\tappId: \"1:636216836291:web:1ce4243edb18ed50a22276\"\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nconst imageStorage = firebase.storage()\nconst firestore = firebase.firestore()\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp\n\nexport {imageStorage, firestore, timestamp}","import React, { Component } from 'react'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\n\nclass LinearProgressWithLabel extends Component {\n    render() {\n        return (\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box width=\"100%\" mr={1}>\n                    <LinearProgress variant=\"determinate\" {...this.props} />\n                </Box>\n                <Box minWidth={35}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(this.props.value,)}%`}</Typography>\n                </Box>\n            </Box>\n        )\n    }\n}\n\nexport default LinearProgressWithLabel","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport { ThemeContext } from '../Context/Themecontext'\nimport { imageStorage, firestore, timestamp } from '../firebase/config'\nimport LinearProgressWithLabel from './Progressmeter'\n\n\nclass Imageform extends Component {\n    static contextType = ThemeContext\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            imageFile: null,\n            invalidFile: false,\n            showProgressMeter: false,\n            uploadPercent: null\n        }\n\n        this.handleImageUpload = this.handleImageUpload.bind(this)\n    }\n\n    handleImageUpload(evt) {\n        const selectedImage = evt.currentTarget.files[0]\n        const imageType = evt.currentTarget.files[0].type\n\n        if(selectedImage && (imageType===\"image/png\" || imageType===\"image/jpeg\")) {\n            this.setState({ imageFile: selectedImage, invalidFile: false, showProgressMeter: true })\n\n            const storageRef = imageStorage.ref(selectedImage.name)\n            const imagesURLCollection = firestore.collection('images')\n\n            storageRef.put(selectedImage).on('state_changed', (snap) => {\n                const percent = (snap.bytesTransferred/snap.totalBytes)*100\n                this.setState({ uploadPercent: percent })\n            }, (err) => {\n                console.log(err)\n            }, async() => {\n                const imageURL = await storageRef.getDownloadURL()\n                imagesURLCollection.add({ url: imageURL, uploadedAt: timestamp() })\n                this.setState({ imageFile: null, showProgressMeter: false, uploadPercent: null })\n            })\n        }\n        \n        else {\n            this.setState({ imageFile: null, invalidFile: true, showProgressMeter: false })\n            setTimeout(() => {this.setState({ imageFile: null, invalidFile: false })}, 3000)\n        }\n    }\n\n    render() {\n        const {imageFile, invalidFile, uploadPercent, showProgressMeter} = this.state\n        const { darkMode } = this.context\n\n        return (\n            <div className=\"mx-auto form-div\">\n                <form id=\"image-form\">\n                    <span className=\"mr-2\">\n                        <input accept=\"image/*\" hidden id=\"image-upload-button\" type=\"file\" onChange={this.handleImageUpload}/>\n                        <label htmlFor=\"image-upload-button\">\n                            <Button id={darkMode ? \"uploadButton-dark\":\"uploadButton\"} size=\"small\" variant=\"contained\" color=\"primary\" component=\"span\"><strong>Upload</strong></Button>\n                        </label>\n                    </span>\n                    <span>\n                        <TextField id={darkMode ? \"textfield-dark\":\"textfield\"} style={{ width: '70%' }} error={invalidFile ? true : false} \n                        helperText={invalidFile ? \"Please Choose a PNG or JPEG File\" : \"\"} value={imageFile ? imageFile.name : \"\"} disabled={darkMode ? true : false}></TextField>\n                    </span>\n                </form>\n                <div className=\"progressmeter mt-4\" style={{ display: showProgressMeter ? 'block' : 'none' }}>\n                    <LinearProgressWithLabel value={uploadPercent} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Imageform","import React, { Component } from 'react'\nimport { ThemeContext } from '../Context/Themecontext'\n\nclass Imagegallery extends Component {\n    static contextType = ThemeContext\n\n    render() {\n        const { imagesData } = this.props\n        const rowsNum = Math.ceil(imagesData.length/3)\n        const { darkMode } = this.context\n\n        return(\n            <div className=\"image-grid\">\n                {\n                    [...new Array(rowsNum)].map((row, index) => {\n                        return <div className=\"row imagerow\">\n                            {\n                                imagesData.slice(index*3, index*3+3).map((image) => {\n                                    return <div key={image.id} className={\"col col-12 col-lg-3 \" + (darkMode ? \"imagediv-dark\":\"imagediv\")}>\n                                        <img src={image.url} alt=\"User Uploaded Pic\" />\n                                    </div>\n                                })\n                            }\n                        </div>\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default Imagegallery","import React, { Component } from 'react'\nimport Title from './Title'\nimport Imageform from './Imageform'\nimport Imagegallery from './Imagegallery'\nimport { firestore } from '../firebase/config'\n\nclass Photogallerydashboard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            userPhotos: []\n        }\n    }\n\n    componentDidMount() {\n        firestore.collection('images').orderBy('uploadedAt').onSnapshot((snap) => {\n            const result = []\n            snap.forEach((image) => {\n                result.push({...image.data(), id: image.id})\n            })\n\n            this.setState({ userPhotos: result })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Title />\n                <Imageform />\n                <Imagegallery imagesData={this.state.userPhotos} />\n            </div>\n        )\n    }\n}\n\nexport default Photogallerydashboard","import React, { Component } from 'react'\nimport { ThemeContext } from '../Context/Themecontext'\n\nclass Pagecontent extends Component {\n    static contextType = ThemeContext\n\n    render() {\n        const { darkMode } = this.context\n        const styles = {\n            backgroundColor: darkMode ? \"#2d3436\" : \"#b8c6db\",\n            backgroundImage: darkMode ? \"linear-gradient(315deg, #2d3436 0%, #000000 74%)\" : \"linear-gradient(315deg, #b8c6db 0%, #f5f7fa 74%)\"\n        }\n\n        return <div style={styles}>{this.props.children}</div>\n    }\n}\n\nexport default Pagecontent","import React, { Component } from 'react'\nimport Photogallerydashboard from './Components/Dashboard'\nimport { ThemeContext, ThemeProvider } from './Context/Themecontext'\nimport Pagecontent from './Components/Pagecontent'\n\nclass App extends Component {\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<ThemeProvider>\n\t\t\t\t\t\t<Pagecontent>\n\t\t\t\t\t\t\t<Photogallerydashboard />\n\t\t\t\t\t\t</Pagecontent>\n\t\t\t\t\t</ThemeProvider>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}